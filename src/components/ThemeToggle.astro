---
// No imports needed for Unicode symbols
---

<button
  id="theme-toggle"
  class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-600 transition-all duration-200 text-gray-700 dark:text-gray-200"
  aria-label="Toggle theme"
  type="button"
>
  <span
    id="theme-toggle-light-icon"
    class="text-sm hidden dark:block"
    role="img"
    aria-label="Switch to light mode"
  >○</span>
  <span
    id="theme-toggle-dark-icon"
    class="text-sm block dark:hidden"
    role="img"
    aria-label="Switch to dark mode"
  >●</span>
</button>

<script>
  // Theme toggle functionality
  const themeToggleBtn = document.getElementById('theme-toggle');
  const html = document.documentElement;

  // Check for saved theme preference or default to system preference
  function getStoredTheme(): 'light' | 'dark' | null {
    const stored = localStorage.getItem('theme');
    return stored === 'dark' || stored === 'light' ? stored : null;
  }

  function getSystemTheme(): 'light' | 'dark' {
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  }

  function setTheme(theme: 'light' | 'dark') {
    if (theme === 'dark') {
      html.classList.add('dark');
    } else {
      html.classList.remove('dark');
    }
    localStorage.setItem('theme', theme);
  }

  // Initialize theme - use stored preference or system preference, defaulting to dark
  const storedTheme = getStoredTheme();
  const currentTheme = storedTheme || getSystemTheme() || 'dark';
  setTheme(currentTheme);

  // Toggle theme on button click
  themeToggleBtn?.addEventListener('click', () => {
    const isDark = html.classList.contains('dark');
    const newTheme = isDark ? 'light' : 'dark';
    setTheme(newTheme);
  });

  // Listen for system theme changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    if (!getStoredTheme()) {
      setTheme(e.matches ? 'dark' : 'light');
    }
  });
</script>